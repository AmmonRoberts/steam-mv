#!/usr/bin/env python3

# Imports
from pathlib import Path
from shutil import move
from vdf import parse

# Config
default_lib = {'path': Path.home() / ".local" / "share" / "Steam",
               'steamapps': "steamapps"}


# Data Functions
def get_lib_data(default_lib):
    # Create list for library folders
    libfolders_list = [default_lib]

    # Parse libraryfolders.vdf
    with open(default_lib['path'] / default_lib['steamapps'] / "libraryfolders.vdf") as f:
        libfolders_vdf = parse(f)
    libfolders_vdf = libfolders_vdf['LibraryFolders']

    # Add custom library paths to libfolders_list
    for k, v in libfolders_vdf.items():
        try:
            int(k)
            next_lib = {'path': Path(v), 'steamapps': "steamapps"}
            if not (next_lib['path'] / next_lib['steamapps']).is_dir():
                next_lib['steamapps'] = "SteamApps"
            libfolders_list.append(next_lib)
        except ValueError:
            pass
    return libfolders_list


def get_app_data(libfolders_list):
    app_list = []
    for i in range(len(libfolders_list)):
        steamapps_dir = libfolders_list[i]['path'] / libfolders_list[i]['steamapps']
        manifest_list = list(steamapps_dir.glob('appmanifest_*.acf'))

        for j in range(len(manifest_list)):
            manifest = manifest_list[j]
            with open(steamapps_dir / manifest) as f:
                app_vdf = parse(f)
            app_vdf = app_vdf['AppState']

            app_dict = {}
            app_dict['name'] = app_vdf['name']
            app_dict['library'] = libfolders_list[i]['path']
            app_dict['steamapps'] = libfolders_list[i]['steamapps']
            app_dict['installdir'] = app_vdf['installdir']
            app_dict['manifest'] = manifest.parts[-1]

            app_list.append(app_dict)
    return app_list


# Menu Functions
def input_num(prompt):
    # Prompts user to input a number.
    while True:
        try:
            num = input(prompt)
            num = int(num)
            break
        except ValueError:
            if num.upper() == "Q":
                exit()
            pass
    return num


def validate(options, prompt):
    choice = None
    while not (choice in range(1, len(options) + 1)):
        choice = input_num(prompt)
    return choice


def app_menu(options):
    # Displays a menu of options, asks user to choose.
    # Returns a valid number corresponding to a list item.
    # options should be a list of dictionaries.

    # Build menu dictionary
    menu_dict = {}
    for i in range(len(options)):
        name = "{:d}. {:s}".format(i+1, options[i]['name'])
        library = str(options[i]['library'])
        menu_dict[name] = library

    # Display menu options
    width_l = max(len(x) for x in menu_dict.keys()) + 4
    for k, v in menu_dict.items():
        print(k.ljust(width_l, '.') + str(v))
    print()

    # Get a valid menu choice
    choice = validate(options, "Select a Steam app to move (Q to quit): ")
    print()
    return choice


def lib_menu(options, exclude):
    options[:] = [d for d in options if d['path'] != exclude]

    # Build menu
    for i in range(len(options)):
        print("{:d}. {:s}".format(i+1, str(options[i]['path'])))
    print()

    # Get a valid menu choice
    choice = validate(options, "Select an install folder (Q to quit): ")
    print()
    return choice


libfolders_list = get_lib_data(default_lib)
app_list = get_app_data(libfolders_list)

# Pick an app to move
app_choice = int(app_menu(app_list)) - 1
app_choice = app_list[app_choice]

# Pick an install folder.
lib_choice = int(lib_menu(libfolders_list, app_choice['library'])) - 1
lib_choice = libfolders_list[lib_choice]

# move files. Convert to strings for shutil.move.
manifest_src = str(app_choice['library']
                   / app_choice['steamapps'] / app_choice['manifest'])
manifest_dst = str(lib_choice['path'] / lib_choice['steamapps'])
installdir_src = str(app_choice['library'] / app_choice['steamapps']
                     / "common" / app_choice['installdir'])
installdir_dst = str(lib_choice['path'] / lib_choice['steamapps'] / "common")

print("Moving " + app_choice['name'] + " to " + str(lib_choice['path']) + "...")
move(manifest_src, manifest_dst)
move(installdir_src, installdir_dst)
print("Done.")
exit()
